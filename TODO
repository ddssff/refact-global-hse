   2. Convert tests in tests/Tests.hs into real tests
   5. Intra-decl transformations - (collect ideas)
          * Move a condition into the called function:

              when flag action
              action = foo

            becomes

              action flag
   	   action flag = when flag foo

          * Expand the condition:

              action (f a b)
   	   action flag = when flag foo

            becomes

              action a b
   	   action a b = when (f a b) foo

   7. Test cases:
         test moving a decl to a new module
         move a decl to a module that imported it (decl1)
         move a decl to a module that didn't import it
         move a decl that is referenced
         move a decl that is unreferenced
   8. Merge IO into Utils
   11. Why does it sometimes insert the same import several times?
   15. New modules need to inherit the LANGUAGE parameters of all the
       departure modules.
   16. Arrival modules also need new LANGUAGE pragmas from departure modules.
   17. Make sure there is at least a newline after the last import, and afer
       the end of the exports.
   18. Fix bad ModuleKey values in this:

          runhaskell scripts/Clean --move=withCurrentDirectory,IO,Utils --move=replaceFile,IO,Utils --find=. --find=scripts --find=tests


DONE

 * 1. Create new modules
 * 3. Make a nice executable for moving decls, including instances
